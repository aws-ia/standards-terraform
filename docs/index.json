[{"uri":"https://aws-ia.github.io/standards-terraform/","title":"The AWS Integration &amp; Automation team&#39;s best practices for Terraform","tags":[],"description":"","content":"Guide Stage: Alpha The aws-ia Terraform standards are updated often. Please be sure to refer to this document often to keep updated!\n License  Licensed under Apache 2.0 Include Amazon NOTICE.txt  Taxonomy Root module: Every Terraform configuration has at least one module, typically known as its root module. In the case of aws-ia modules, the root module is always meant to be made up of reuseable modules or build blocks.\nChild modules: A module that has been called by another module is often referred to as a child module.\nTypes of reuseable aws-ia Modules:\n aws-ia Service Modules: A container that provides a sensible default for deploying an AWS service based on aws-ia standards (Example: VPC/Aurora/SQS) aws-ia Partner Modules: A container that leverags one or more AWS Service Modules to build the infrastructure needed to instantiate an AWS partner product (Example: Magento)  Module Structure ../terraform-partnername-productname ├── LICENSE ├── NOTICE.txt ├── deploy │ └── main.tf ├── main.tf └── setup_workspace ├── variables.tf └── workspace.tf File: deploy/main.tf\n# Example deployment using Terraform Cloud # Defaults to TFC for remote backend terraform { backend \u0026#34;remote\u0026#34; {} required_version = \u0026#34;\u0026gt;= 1.0.5\u0026#34; }# Use baseline VPC from aws-ia registery \u0026lt;REPLACE ME!\u0026gt;# Deploys example workload instance via root module module \u0026#34;workload\u0026#34; { source = \u0026#34;../\u0026#34;# interface to be defined # } File: /main.tf\n# Root Module # No backends should be defined by default in Root Module # This module is intended to be called by one or more other modules and must not contain any provider blocks File: /setup_workspace/\nCreates the Terraform workspace in TFC. See the registry for more information.\nDeployment Types Local: Write Terraform state and configuration to local working directory.\nTerraform Cloud (TFC): Writes Terraform state and configuration to remote TFC workspace and stream it locally\nFor more into in how to setup TFC Workspace refer to the cloud_workspace module\n Development standards Minimum Terraform version Binary version: \u0026gt;= 1.0.5\nProvider Version: ~\u0026gt; v3.58.0\naws-ia module standards Module /main.tf must not contain provider block definitions.\nDeploy example /deploy/main.tf - When creating an example Terraform Cloud deployment for the module are creating refer to the source directly.\nmodule \u0026#34;self_deployment_example\u0026#34; { source = \u0026#34;../\u0026#34; }  If the example terraform cloud deployment requires a VPC or any other AWS service, use the Terraform registry path. Lock the version of any dependancies to the latest version at the time of release.  module \u0026#34;vpc\u0026#34; { source = \u0026#34;aws-ia/vpc/aws\u0026#34; version = \u0026#34;0.0.2\u0026#34; } "},{"uri":"https://aws-ia.github.io/standards-terraform/faq/","title":"FAQ","tags":[],"description":"","content":""},{"uri":"https://aws-ia.github.io/standards-terraform/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://aws-ia.github.io/standards-terraform/tags/","title":"Tags","tags":[],"description":"","content":""}]